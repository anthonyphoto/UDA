/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _AMATPS_H_RPCGEN
#define	_AMATPS_H_RPCGEN

#include <rpc/rpc.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifdef us2_1		/* StarServer FT */
#include <sys/types.h>
#include <sys/timeval.h>
#define CLSET_TIMEOUT	0
#endif
#ifdef hp
#include <rpc/types.h>
#endif
#include <stdio.h>
#include "amatps_api.h"

struct ack_input {
	int scid;
	int ack;
};
typedef struct ack_input ack_input;

struct connect_input {
	char *dcf;
	struct {
		u_int acparms_len;
		char *acparms_val;
	} acparms;
};
typedef struct connect_input connect_input;

struct disconnect_input {
	int scid;
	int type;
};
typedef struct disconnect_input disconnect_input;

struct primary_return {
	int scode;
	struct {
		u_int fb_len;
		char *fb_val;
	} fb;
};
typedef struct primary_return primary_return;

struct secondary_input {
	int scid;
	int tb;
	int fb;
	long sbsn;
	long ebsn;
};
typedef struct secondary_input secondary_input;

struct secondary_return {
	int scode;
	struct {
		u_int fb_len;
		char *fb_val;
	} fb;
	struct {
		u_int tb_len;
		char *tb_val;
	} tb;
};
typedef struct secondary_return secondary_return;

struct maint_return {
	int scode;
	struct {
		u_int fb_len;
		char *fb_val;
	} fb;
};
typedef struct maint_return maint_return;

struct ssend_input {
	int scid;
	int mtype;
	struct {
		u_int smb_len;
		char *smb_val;
	} smb;
};
typedef struct ssend_input ssend_input;

struct srecv_input {
	int scid;
	int mbsize;
};
typedef struct srecv_input srecv_input;

struct srecv_return {
	int scode;
	int mtype;
	struct {
		u_int smb_len;
		char *smb_val;
	} smb;
};
typedef struct srecv_return srecv_return;

struct test_input {
	int scid;
	int count;
};
typedef struct test_input test_input;

struct trace_input {
	int trace_class;
	int trace_level;
	char *file_prefix;
	long max_file_size;
};
typedef struct trace_input trace_input;

struct link_return {
	int scode;
	struct {
		u_int x25_stat_buf_len;
		char *x25_stat_buf_val;
	} x25_stat_buf;
};
typedef struct link_return link_return;

struct dcf_return {
	int scode;
	char *fb;
};
typedef struct dcf_return dcf_return;

struct put_input {
	char *dcf;
	char *fb;
	char cflag;
	char *password;
};
typedef struct put_input put_input;

#define	AMATPSPLUS ((unsigned long)(0x2A3A7F50))
#define	AMATPSPLUSVER ((unsigned long)(1))

#if defined(__STDC__) || defined(__cplusplus)
#define	rpc_ack_primary ((unsigned long)(1))
extern  int * rpc_ack_primary_1(ack_input , CLIENT *);
extern  int * rpc_ack_primary_1_svc(ack_input , struct svc_req *);
#define	rpc_connect_session ((unsigned long)(2))
extern  int * rpc_connect_session_1(connect_input , CLIENT *);
extern  int * rpc_connect_session_1_svc(connect_input , struct svc_req *);
#define	rpc_disconnect_session ((unsigned long)(3))
extern  int * rpc_disconnect_session_1(disconnect_input , CLIENT *);
extern  int * rpc_disconnect_session_1_svc(disconnect_input , struct svc_req *);
#define	rpc_poll_primary ((unsigned long)(4))
extern  primary_return * rpc_poll_primary_1(int , CLIENT *);
extern  primary_return * rpc_poll_primary_1_svc(int , struct svc_req *);
#define	rpc_poll_secondary ((unsigned long)(5))
extern  secondary_return * rpc_poll_secondary_1(secondary_input , CLIENT *);
extern  secondary_return * rpc_poll_secondary_1_svc(secondary_input , struct svc_req *);
#define	rpc_poll_maint ((unsigned long)(6))
extern  maint_return * rpc_poll_maint_1(int , CLIENT *);
extern  maint_return * rpc_poll_maint_1_svc(int , struct svc_req *);
#define	rpc_ssend ((unsigned long)(7))
extern  int * rpc_ssend_1(ssend_input , CLIENT *);
extern  int * rpc_ssend_1_svc(ssend_input , struct svc_req *);
#define	rpc_srecv ((unsigned long)(8))
extern  srecv_return * rpc_srecv_1(srecv_input , CLIENT *);
extern  srecv_return * rpc_srecv_1_svc(srecv_input , struct svc_req *);
#define	rpc_test_connection ((unsigned long)(9))
extern  int * rpc_test_connection_1(test_input , CLIENT *);
extern  int * rpc_test_connection_1_svc(test_input , struct svc_req *);
#define	rpc_set_trace ((unsigned long)(10))
extern  int * rpc_set_trace_1(trace_input , CLIENT *);
extern  int * rpc_set_trace_1_svc(trace_input , struct svc_req *);
#define	rpc_get_link_stats ((unsigned long)(11))
extern  link_return * rpc_get_link_stats_1(int , CLIENT *);
extern  link_return * rpc_get_link_stats_1_svc(int , struct svc_req *);
#define	rpc_reset_link_stats ((unsigned long)(12))
extern  int * rpc_reset_link_stats_1(int , CLIENT *);
extern  int * rpc_reset_link_stats_1_svc(int , struct svc_req *);
#define	rpc_get_link_status ((unsigned long)(13))
extern  int * rpc_get_link_status_1(int , CLIENT *);
extern  int * rpc_get_link_status_1_svc(int , struct svc_req *);
#define	rpc_get_dcf ((unsigned long)(14))
extern  dcf_return * rpc_get_dcf_1(char *, CLIENT *);
extern  dcf_return * rpc_get_dcf_1_svc(char *, struct svc_req *);
#define	rpc_put_dcf ((unsigned long)(15))
extern  int * rpc_put_dcf_1(put_input , CLIENT *);
extern  int * rpc_put_dcf_1_svc(put_input , struct svc_req *);
#define	rpc_reset_server ((unsigned long)(16))
extern  int * rpc_reset_server_1(char *, CLIENT *);
extern  int * rpc_reset_server_1_svc(char *, struct svc_req *);
extern int amatpsplus_1_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define	rpc_ack_primary ((unsigned long)(1))
extern  int * rpc_ack_primary_1();
extern  int * rpc_ack_primary_1_svc();
#define	rpc_connect_session ((unsigned long)(2))
extern  int * rpc_connect_session_1();
extern  int * rpc_connect_session_1_svc();
#define	rpc_disconnect_session ((unsigned long)(3))
extern  int * rpc_disconnect_session_1();
extern  int * rpc_disconnect_session_1_svc();
#define	rpc_poll_primary ((unsigned long)(4))
extern  primary_return * rpc_poll_primary_1();
extern  primary_return * rpc_poll_primary_1_svc();
#define	rpc_poll_secondary ((unsigned long)(5))
extern  secondary_return * rpc_poll_secondary_1();
extern  secondary_return * rpc_poll_secondary_1_svc();
#define	rpc_poll_maint ((unsigned long)(6))
extern  maint_return * rpc_poll_maint_1();
extern  maint_return * rpc_poll_maint_1_svc();
#define	rpc_ssend ((unsigned long)(7))
extern  int * rpc_ssend_1();
extern  int * rpc_ssend_1_svc();
#define	rpc_srecv ((unsigned long)(8))
extern  srecv_return * rpc_srecv_1();
extern  srecv_return * rpc_srecv_1_svc();
#define	rpc_test_connection ((unsigned long)(9))
extern  int * rpc_test_connection_1();
extern  int * rpc_test_connection_1_svc();
#define	rpc_set_trace ((unsigned long)(10))
extern  int * rpc_set_trace_1();
extern  int * rpc_set_trace_1_svc();
#define	rpc_get_link_stats ((unsigned long)(11))
extern  link_return * rpc_get_link_stats_1();
extern  link_return * rpc_get_link_stats_1_svc();
#define	rpc_reset_link_stats ((unsigned long)(12))
extern  int * rpc_reset_link_stats_1();
extern  int * rpc_reset_link_stats_1_svc();
#define	rpc_get_link_status ((unsigned long)(13))
extern  int * rpc_get_link_status_1();
extern  int * rpc_get_link_status_1_svc();
#define	rpc_get_dcf ((unsigned long)(14))
extern  dcf_return * rpc_get_dcf_1();
extern  dcf_return * rpc_get_dcf_1_svc();
#define	rpc_put_dcf ((unsigned long)(15))
extern  int * rpc_put_dcf_1();
extern  int * rpc_put_dcf_1_svc();
#define	rpc_reset_server ((unsigned long)(16))
extern  int * rpc_reset_server_1();
extern  int * rpc_reset_server_1_svc();
extern int amatpsplus_1_freeresult();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_ack_input(XDR *, ack_input*);
extern  bool_t xdr_connect_input(XDR *, connect_input*);
extern  bool_t xdr_disconnect_input(XDR *, disconnect_input*);
extern  bool_t xdr_primary_return(XDR *, primary_return*);
extern  bool_t xdr_secondary_input(XDR *, secondary_input*);
extern  bool_t xdr_secondary_return(XDR *, secondary_return*);
extern  bool_t xdr_maint_return(XDR *, maint_return*);
extern  bool_t xdr_ssend_input(XDR *, ssend_input*);
extern  bool_t xdr_srecv_input(XDR *, srecv_input*);
extern  bool_t xdr_srecv_return(XDR *, srecv_return*);
extern  bool_t xdr_test_input(XDR *, test_input*);
extern  bool_t xdr_trace_input(XDR *, trace_input*);
extern  bool_t xdr_link_return(XDR *, link_return*);
extern  bool_t xdr_dcf_return(XDR *, dcf_return*);
extern  bool_t xdr_put_input(XDR *, put_input*);

#else /* K&R C */
extern bool_t xdr_ack_input();
extern bool_t xdr_connect_input();
extern bool_t xdr_disconnect_input();
extern bool_t xdr_primary_return();
extern bool_t xdr_secondary_input();
extern bool_t xdr_secondary_return();
extern bool_t xdr_maint_return();
extern bool_t xdr_ssend_input();
extern bool_t xdr_srecv_input();
extern bool_t xdr_srecv_return();
extern bool_t xdr_test_input();
extern bool_t xdr_trace_input();
extern bool_t xdr_link_return();
extern bool_t xdr_dcf_return();
extern bool_t xdr_put_input();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_AMATPS_H_RPCGEN */
