#ifndef	LOGMANAGEMENT_HPP
#define	LOGMANAGEMENT_HPP

#include <iostream.h>
#include <strstream.h>
#include <fstream.h>
#include <string.h>
#include <unistd.h>
#include <fstream.h>

#ifndef TEMPMSGQ_HPP
	#include <TempMsgQ_new.hpp>
#endif

#ifndef MSGFORMAT_HPP
	#include <MsgFormat.hpp>
#endif

#ifndef _LOGMANAGESM_HPP
	#include <LogManageSM.hpp>
#endif

class SendLogManage	:	public HeaderOfMessage
{
	private:
		MsgLog*							clsMsgLog;
		ProcPerformData*				clsPerForm;
		ProcEventData*					clsEventHist;
		ProcErrInfo*					clsErrLog;
		
		MessageQueue<MsgLog>*			LogQ;
		MessageQueue<ProcPerformData>*	performMQ;
		MessageQueue<ProcEventData>*	eventHstMQ;
		MessageQueue<ProcErrInfo>*		errorLogMQ;
		
		LogManageSM*					clsLogMgrSM;

		ostrstream*    					m_ostring;
		ofstream*						fLogFile;

	public:
		SendLogManage	(	int		nSystemId,
							int		nServiceId,
							int		nGroupId,
							int		nProcessType,
							int		nSerialNo,
							int		nRemark
						);
		~SendLogManage();

		SendLogManage& operator<<(const char* str);
		SendLogManage& operator<<(int n);
		SendLogManage& operator<<(unsigned int n);
		SendLogManage& operator<<(char c);
		SendLogManage& operator<<(short s);
		SendLogManage& operator<<(long l);
		SendLogManage& operator<<(float f);
		SendLogManage& operator<<(double d);
		SendLogManage& operator<<(unsigned char c);
		SendLogManage& operator<<(unsigned short s);
		SendLogManage& operator<<(unsigned long l);
		SendLogManage& operator<<(void* v);
		SendLogManage& operator<<(ostream&(*)(ostream&));
		
		const char* get_string(void);
		int			get_StringLength(void);
		int			writeLog();

		//	Error Message의 Error Code Setting에 사용
		int			ErrorCode(int	nValue);
		
		//	Performance Data MQ 전송에 사용
		void		put_PerformanceData	(	int			 nFlag,
											int 		 nDataType,
											unsigned int unFileNo,
											unsigned int unUdrCnt,
											unsigned int nQueryCnt
										);
		void		put_EventHistData	(	int			 nFlag,
											int			 nExitCode
										);
};

#endif
